version: 2
jobs:
  api-test:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/project/api

    steps:
      - checkout:
          path: ~/project

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      # - run: sudo npm install -g codecov

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: run tests
          command: |
            npm test
            # codecov
  
  ui-test:
    docker:
      - image: vuejs/ci
    working_directory: ~/project/client-app

    steps:
      - checkout:
          path: ~/project

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      # - run: sudo npm install -g codecov

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: run tests
          command: |
            npm run test:unit

  chaincode-test:
    docker:
      - image: circleci/golang:1.12
    working_directory: ~/project/chaincode/project
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install dependencies
          command: |
            go mod tidy
            go mod download
      - run:
          name: Test chaincode
          command: |
            go test
            # go test -race -coverprofile=coverage.txt -covermode=atomic
            # bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  workflows:
    jobs:
      - api-test
      - ui-test
      - chaincode-test